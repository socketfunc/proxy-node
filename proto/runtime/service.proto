syntax = "proto3";

package runtime;

option go_package = "github.com/socketfunc/proto/runtime";

import "packet/packet.proto";
import "store/filter.proto";
import "store/update.proto";
import "store/value.proto";

service RuntimeService {
    rpc Stream (stream StreamRequest) returns (stream StreamSend) {}
    rpc Healthz (HealthzRequest) returns (HealthzResponse) {}
}

enum StreamCmd {
    MESSAGE = 0;
    STORE = 1;
}

message StreamRequest {
    StreamCmd cmd = 1;
    MessageRequest message_request = 2;
    StoreResponse store_response = 3;
}

message StreamSend {
    StreamCmd cmd = 1;
    MessageResponse message_response = 2;
    StoreRequest store_request = 3;
}

message MessageRequest {
    packet.Packet packet = 1;
}

message MessageResponse {
    enum Type {
        SEND = 0;
        REPLY = 1;
        BROADCAST = 2;
    }

    Type type = 1;
    packet.Packet packet = 2;
}

enum StoreCmd {
    GET = 0;
    PUT = 1;
    MODIFY = 2;
    DEL = 3;
}

message StoreRequest {
    string id = 1; // request id
    StoreCmd cmd = 2;
    string key = 3;
    store.Entity entity = 4;
    repeated store.Filter filters = 5;
    repeated store.Update updates = 6;
}

message StoreResponse {
    string id = 1; // request id
    StoreCmd cmd = 2;
    bool success = 3;
    store.Entity entity = 4;
}

message HealthzRequest {}

message HealthzResponse {}
